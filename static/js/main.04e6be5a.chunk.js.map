{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+OA+JeA,MA3Jf,WACE,OACA,yBAAKC,UAAU,OACb,8BACE,6BACE,mDACA,yDAEF,6BACE,uCACA,+OAEF,6BACE,kDACE,4BACE,oDACA,6DACA,sCACA,0DACA,+DACA,2DAGN,6BACE,8CACE,4BACE,8EAGN,6BACE,wCAGA,4BACA,iEACA,sDACA,mDACA,oDACA,uCAGF,yBAAKA,UAAU,mBACb,0CACA,6BACE,oHAIA,4BACE,2JACA,qFACA,kGACA,8GACA,yIACA,6GACA,6GACA,4JACA,sHACA,0HACA,wHAGJ,6BACE,sHAIA,4BACE,uGACA,iHACA,gHACA,gKACA,yJACA,yHACA,8KACA,8FACA,gIAGJ,6BACE,iHAIA,4BACE,2KACA,iJACA,qHACA,oFACA,2GACA,sGACA,iFACA,kHAGJ,6BACE,+FAKA,4BACE,mGACA,2HACA,oIAIJ,6BACE,mJAIA,4BACE,2FACA,wDACA,yEACA,+DACA,4FACA,6HAGJ,6BACA,+IAIA,4BACE,wEACA,4GAKJ,6BACI,wCAEA,wHAKJ,6BACI,yCAEA,iGCzIUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.04e6be5a.chunk.js","sourcesContent":["import React from 'react';\n \nimport './App.css';\n\nfunction App() {\n  return (\n  <div className=\"App\">\n    <body>\n      <div>\n        <h1>Roosevelt B. Segura</h1>\n        <h2>Roosevelt.bseg@gmail.com</h2>\n      </div>\n      <div>\n        <h3>Summary</h3>\n        <p>Experience worker in IT while continuing my education in the field of Cyber Security. Strong customer service over the phone assisting with installing, modifying and repairing computer hardware and software.</p>\n      </div>\n      <div>\n        <h3>Skills & Abilities</h3>\n          <ul>\n            <li>Microsoft Windows OS</li>\n            <li>Microsoft Office Applications</li>\n            <li>Mac OS</li> \n            <li>Network Security knowledge</li>\n            <li>Bilingual (English and Spanish)</li>\n            <li>Superior Customer Service</li>\n          </ul>\n      </div>\n      <div>\n        <h3>Certifications</h3>\n          <ul>\n            <p>CompTIA Security+ CE Apr/2016 – Apr/2019</p>\n          </ul>\n      </div>\n      <div>\n        <h3>\n          Training\n        </h3>\n        <ul>\n        <li>Windows Server 2012 R2 (40 Hours)</li>\n        <li> Windows OS (40 hours)</li>\n        <li>Network+ (40 hours)</li>\n        <li>Security+ (40 hours)</li>\n        <li>Linux</li>\n        </ul>\n      </div>\n      <div className=\"Experience jobs\">\n        <h3>Experience</h3>\n        <div>\n          <h4>\n            Partners HealthCare Boston, MA\t\t\tMay/2019 – Present\n            Imaging Informatics Analyst\n          </h4>\n          <ul>\n            <li>Collaborate and communicate effectively with colleagues, and other hospital personnel, to facilitate day to day operations.</li>\n            <li>Troubleshoot / repair hardware and software problems.</li>\n            <li>Install patches / upgrades to Desktop / Office based applications.</li>\n            <li>Coordinates with System Administrators on mission critical application issues.</li>\n            <li>Provide training and documentation instructions for hardware and software operation for clinical systems.</li>\n            <li>Provide phone, e-mail, on-site, and off-site direct user support as required.</li>\n            <li>Investigates, plans, implements, tests, and debugs operating system software.</li>\n            <li>Troubleshoots and resolves hardware, software, and connectivity problems, including user access and component configuration.</li>\n            <li>Provide advanced technical assistance and maintenance support to department and users.</li>\n            <li>Records and maintains hardware and software inventories for ender user license agreements.</li>\n            <li>Performs problem resolution and provides on-call support for computer/network systems.</li>\n          </ul>\n        </div>\n        <div>\n          <h4>\n              MIT Lincoln Laboratory Lexington, MA\t\t\tApr/2019 – May/2019\n              System Support Analyst            \n          </h4>\n          <ul>\n            <li>Provide desktop and laptop desk side support for Windows & Mac systems.</li>\n            <li>Provide technical support and training to personal computer and PC network users.</li>\n            <li>Assist users in solving IT problems using available hardware and software tools.</li>\n            <li>Support, install, and maintain personal computers, local area networks, operating systems, software, and related IT peripherals.</li>\n            <li>Install and support hardware and software components for user groups, perform preventive maintenance, and test equipment.</li>\n            <li>Evaluate system configuration and software to ensure effective use of hardware resources.</li>\n            <li>Engage with users to determine their potential future business requirements and create ways to streamline making these requirements a reality.</li>\n            <li>Provide positive customer experiences when working with users.</li>\n            <li>Use “Footprints” ticketing system daily to triage tickets, escalations, issues, etc.</li>\n          </ul>\n        </div>\n        <div>\n          <h4>\n            Netscout Westford, MA\t\t\t\t\tNov/2018 – Mar/2019\n            IT Helpdesk Support Specialist\n          </h4>\n          <ul>\n            <li>Provide desktop end-user support, PC setup/configuration and resolution of all IT Client Services requests, for local and remote employees.</li>\n            <li>Provide technical support to end users in support of hardware, software, peripherals, and network infrastructure.</li>\n            <li>Build and deploy various brands of personal computers with associated configurations.</li>\n            <li>Deploy and support VOIP phone hardware and software.</li>\n            <li>Maintain and enforce corporate hardware, software, and anti-virus policies.</li>\n            <li>Update online helpdesk ticketing system, to track progress and status.</li>\n            <li>Attend regular staff meetings to report on tasks.</li>\n            <li>Act as a resource for all employees regarding technical questions, and training.</li>\n          </ul>\n        </div>\n        <div>\n          <h4>\n            MilliporeSigma Danvers, MA\t\t\t\tApr/2018 – Oct/2018 \n            Assembly\n          </h4>\n          \n          <ul>\n            <li>Reading detailed instructions and following established procedures.</li>\n            <li>producing and packaging medical disposables in a clean-room, biopharmaceutical environment.</li>\n            <li>Maintains safe and clean working environment by complying with procedures, rules, and regulations.</li>\n          </ul>\n        </div>\n        \n        <div>\n          <h4>\n            OnePath North Andover, MA                                          \tAug/2017 – Jan/2018\n            Help Desk Technician I\n          </h4>\n          <ul>\n            <li>Install, modify, and repair computer hardware and software.</li>\n            <li>Manage Active Directory.</li>\n            <li>Manage and Troubleshoot Office 365 email.</li>\n            <li>Troubleshoot MS Windows 7 & 10.</li>\n            <li>Coordinate with remote users for PC repairs and diagnostics.</li>\n            <li>Troubleshoot network connectivity issues, working with remote users on a corporate network.</li>\n          </ul>        \n        </div>\n        <div>\n        <h4>\n          G4S Secure Integration Burlington, MA                         Oct/2016 – March/2017\n          Help Desk Technician I\n        </h4>\n        <ul>\n          <li>Monitor hardware, software and networks.</li>\n          <li>Ability to use ticketing systems to track, manage, review machine issues.</li>\n        </ul>\n        </div>\n      \n      </div>\n      <div>\n          <h3>Military</h3>\n        \n          <ul>\n            U.S. Army Specialist (Reserves)\t\t          Mar/2010 - Mar/2018\n            21W Carpentry Specialist\n          </ul>\n      </div>\n      <div>\n          <h3>Education</h3>\n          \n          <ul>\n            Bunker hill Community College -                                        \n            Field of Study: Cybersecurity\n          </ul>\n      </div>\n    </body>\n  </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}